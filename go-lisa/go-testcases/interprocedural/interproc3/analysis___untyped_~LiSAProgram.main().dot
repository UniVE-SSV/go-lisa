digraph {
	"node0" [shape="rect",color="black",label=<a, b = [unresolved]f1()<BR/>{{<BR/>heap [[ [heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':4:11] ]]<BR/>value [[ a: [1, 1]<BR/>b: #TOP#<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':4:11[1]: #TOP# ]]<BR/>}} -&gt; [a, b]>];
	"node1" [shape="rect",color="gray",label=<e, f = [unresolved]f3()<BR/>{{<BR/>heap [[ [heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':14:1, heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':4:11, heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':8:11] ]]<BR/>value [[ a: [1, 1]<BR/>b: #TOP#<BR/>c: [2, 2]<BR/>d: [3, 3]<BR/>e: [4, 4]<BR/>f: [5, 5]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':14:1[0]: [4, 4]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':14:1[1]: [5, 5]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':4:11[1]: #TOP#<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':8:11[0]: [2, 2]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':8:11[1]: [3, 3] ]]<BR/>}} -&gt; [e, f]>];
	"node2" [shape="rect",color="gray",label=<c, d = [unresolved]f2()<BR/>{{<BR/>heap [[ [heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':4:11, heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':8:11] ]]<BR/>value [[ a: [1, 1]<BR/>b: #TOP#<BR/>c: [2, 2]<BR/>d: [3, 3]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':4:11[1]: #TOP#<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':8:11[0]: [2, 2]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc3/interprocedural.go':8:11[1]: [3, 3] ]]<BR/>}} -&gt; [c, d]>];
	"node2" -> "node1" [color="black"];
	"node0" -> "node2" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
