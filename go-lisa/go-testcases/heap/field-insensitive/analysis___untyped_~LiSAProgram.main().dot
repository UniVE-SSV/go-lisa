digraph {
	"node0" [shape="rect",color="black",label=<i := 0<BR/>{{<BR/>heap [[ [] ]]<BR/>value [[ vid$i: [0, 0] ]]<BR/>}} -&gt; [vid$i]>];
	"node1" [shape="rect",color="gray",label=<v := nonKeyedLit(Vertex)(3, 4)<BR/>{{<BR/>heap [[ [pp@'go-testcases/heap/field-insensitive/go-structs.go':14:17[w]] ]]<BR/>value [[ pp@'go-testcases/heap/field-insensitive/go-structs.go':14:17[w]: [3, 4]<BR/>vid$i: [0, 0] ]]<BR/>}} -&gt; [vid$v]>];
	"node2" [shape="rect",color="gray",label=<v::Y = 3<BR/>{{<BR/>heap [[ [pp@'go-testcases/heap/field-insensitive/go-structs.go':14:17[w]] ]]<BR/>value [[ pp@'go-testcases/heap/field-insensitive/go-structs.go':14:17[w]: [2, 4]<BR/>vid$i: [0, 0] ]]<BR/>}} -&gt; [pp@'go-testcases/heap/field-insensitive/go-structs.go':14:17[w]]>];
	"node3" [shape="rect",color="gray",label=<v::X = 2<BR/>{{<BR/>heap [[ [pp@'go-testcases/heap/field-insensitive/go-structs.go':14:17[w]] ]]<BR/>value [[ pp@'go-testcases/heap/field-insensitive/go-structs.go':14:17[w]: [2, 4]<BR/>vid$i: [0, 0] ]]<BR/>}} -&gt; [pp@'go-testcases/heap/field-insensitive/go-structs.go':14:17[w]]>];
	"node1" -> "node3" [color="black"];
	"node0" -> "node1" [color="black"];
	"node3" -> "node2" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
