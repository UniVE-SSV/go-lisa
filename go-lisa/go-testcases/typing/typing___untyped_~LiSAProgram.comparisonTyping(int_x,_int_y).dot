digraph {
	"node0" [shape="rect",color="black",label=<b := ==(2, 2)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ vid$b: [bool]<BR/>vid$x: #TOP#<BR/>vid$y: #TOP#<BR/>[inferred: [bool], state: _|_] ]]<BR/>}} -&gt; [vid$b]>];
	"node1" [shape="rect",color="gray",label=<e := ==(d, 2)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ vid$b: [bool]<BR/>vid$d: [int]<BR/>vid$e: [bool]<BR/>vid$x: #TOP#<BR/>vid$y: #TOP#<BR/>[inferred: [bool], state: _|_] ]]<BR/>}} -&gt; [vid$e]>];
	"node2" [shape="rect",color="gray",label=<c := !(==(2, 2))<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ vid$b: [bool]<BR/>vid$c: [bool]<BR/>vid$d: [int]<BR/>vid$e: [bool]<BR/>vid$x: #TOP#<BR/>vid$y: #TOP#<BR/>[inferred: [bool], state: _|_] ]]<BR/>}} -&gt; [vid$c]>];
	"node3" [shape="rect",color="gray",label=<var d int = +(2, 2)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ vid$b: [bool]<BR/>vid$d: [int]<BR/>vid$x: #TOP#<BR/>vid$y: #TOP#<BR/>[inferred: [int], state: _|_] ]]<BR/>}} -&gt; [vid$d]>];
	"node1" -> "node2" [color="black"];
	"node3" -> "node1" [color="black"];
	"node0" -> "node3" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
